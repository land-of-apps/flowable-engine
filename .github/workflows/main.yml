name: Flowable Main Build

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '0 0 * * 0'

permissions:
  # Allows the EndBug/add-and-commit step to commit the package manager changes,
  # adding the AppMap language library and configuration file appmap.yml.
  # Once the EndBug/add-and-commit is removed, this permission can be removed, 
  # unless you need it for other reasons.
  contents: write

  # Allows the getappmap/archive-action to write a PR comment with the 
  # AppMap configuration status.
  pull-requests: write

env:
  MAVEN_ARGS: >-
    -B -V --no-transfer-progress
    -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120

jobs:
  test_jdk:
    name: Linux (JDK ${{ matrix.java }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [17]
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: ${{ matrix.java }}
    - name: Install AppMap tools
      id: install-appmap
      uses: getappmap/install-action@v1
      with:
        install-appmap-library: false
    - name: Cache Maven Repository
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Install
      # Need to do install first in order for the OSGi tests to work
      run: ./mvnw install ${MAVEN_ARGS} -DskipTests=true -Dmaven.javadoc.skip=true
    - name: Test
      run: |
        ./mvnw verify -Pdistro,ui,errorLogging ${MAVEN_ARGS} -Dmaven.test.redirectTestOutputToFile=false -am -pl modules/flowable-dmn-engine -Dtest=FlowableDmnJupiterCustomResourceTest
    # rsync AppMaps from all recursive tmp/appmap folders into ./tmp/appmap
    - name: Collect AppMaps
      if: always()
      run: |
        mkdir -p tmp/appmap
        find . -name '*.appmap.json' -exec rsync -R {} tmp/appmap \;
    - name: Archive AppMaps
      if: always()
      uses: getappmap/archive-action@v1
      with:
        revision: ${{ github.event.pull_request.base.sha }}
    # End AppMap bootstrap archive step
    # Edit to try and trigger Workflow
